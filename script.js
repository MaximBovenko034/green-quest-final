(function(){
  // --- –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ---
  const parallaxRoot = document.getElementById('parallax-root');
  const layers = Array.from(document.querySelectorAll('.bg-layer'));
  const canvas = document.getElementById('particles-canvas');
  const ctx = canvas.getContext('2d');
  const startBtn = document.getElementById('startBtn');
  const message = document.getElementById('message');

  // resize canvas –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
  function resizeCanvas(){
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
  }
  window.addEventListener('resize', resizeCanvas);
  resizeCanvas();

  // –ü–∞—Ä–ª–ª–∞–∫—Å: –¥–≤–∏–∂–µ–Ω–∏–µ —Å–ª–æ—ë–≤ –ø–æ –ø–æ–ª–æ–∂–µ–Ω–∏—é –º—ã—à–∏
  document.addEventListener('mousemove', function(e){
    const w = window.innerWidth, h = window.innerHeight;
    const cx = (e.clientX - w/2) / (w/2); // -1..1
    const cy = (e.clientY - h/2) / (h/2);
    layers.forEach(layer=>{
      const depth = parseFloat(layer.getAttribute('data-depth') || '0.1');
      const tx = cx * depth * 20; // –º–Ω–æ–∂–∏—Ç–µ–ª—å –≥–ª—É–±–∏–Ω—ã
      const ty = cy * depth * 12;
      layer.style.transform = `translate3d(${tx}px, ${ty}px, 0) scale(${1 + depth*0.02})`;
    });
  });

  // –ü–∞—Ä–ª–ª–∞–∫—Å –Ω–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫—É: –Ω–µ–º–Ω–æ–≥–æ —Å–º–µ—â–∞–µ–º —Å–ª–æ–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
  window.addEventListener('scroll', function(){
    const sc = window.scrollY;
    layers.forEach(layer=>{
      const depth = parseFloat(layer.getAttribute('data-depth') || '0.1');
      layer.style.transform = `translate3d(0, ${-sc * depth * 0.15}px, 0)`;
    });
  }, {passive:true});

  // –ü—Ä–æ—Å—Ç—ã–µ —á–∞—Å—Ç–∏—Ü—ã (canvas) ‚Äî –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ trash
  const particles = [];
  function createParticles(x,y, count=18){
    for(let i=0;i<count;i++){
      particles.push({
        x, y,
        vx: (Math.random()-0.5) * 6,
        vy: (Math.random()-0.8) * 6,
        life: 60 + Math.random()*40,
        size: 3 + Math.random()*4,
        color: `rgba(255,255,255,${0.6+Math.random()*0.4})`
      });
    }
  }

  function updateParticles(){
    for(let i=particles.length-1;i>=0;i--){
      const p = particles[i];
      p.vy += 0.12; // gravity
      p.x += p.vx;
      p.y += p.vy;
      p.life -= 1;
      if(p.life <= 0 || p.y > canvas.height + 50) particles.splice(i,1);
    }
  }

  function drawParticles(){
    ctx.clearRect(0,0,canvas.width,canvas.height);
    for(const p of particles){
      ctx.beginPath();
      ctx.fillStyle = p.color;
      ctx.arc(p.x, p.y, p.size * Math.max(0, p.life/100 + 0.2), 0, Math.PI*2);
      ctx.fill();
    }
  }

  // –∞–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ü–∏–∫–ª
  function loop(){
    updateParticles();
    drawParticles();
    requestAnimationFrame(loop);
  }
  requestAnimationFrame(loop);

  // –≤–µ—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å –∫–ª–∞—Å—Å–æ–º clickable (trash)
  function bindClickables(){
    const items = document.querySelectorAll('.clickable');
    items.forEach(el=>{
      el.addEventListener('click', function(ev){
        const rect = el.getBoundingClientRect();
        const cx = rect.left + rect.width/2;
        const cy = rect.top + rect.height/2;
        createParticles(cx, cy, 30);
        // –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
        el.style.transition = 'transform .35s ease, opacity .35s ease';
        el.style.transform = 'scale(0.25) rotate(-10deg)';
        el.style.opacity = '0';
        // —á–µ—Ä–µ–∑ 400ms —É–±–∏—Ä–∞–µ–º –∏–∑ DOM —á—Ç–æ–±—ã –Ω–µ –º–µ—à–∞–ª–æ
        setTimeout(()=>{ if(el.parentNode) el.parentNode.removeChild(el); }, 450);
      });
    });
  }
  bindClickables();

  // —Å—Ç–∞—Ä—Ç –∫–Ω–æ–ø–∫–∏ ‚Äî –ø—Ä–∏–º–µ—Ä –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–æ–∫–∞–∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
  startBtn.addEventListener('click', function(){
    message.textContent = '–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –£–±–∏—Ä–∞–π –º—É—Å–æ—Ä –∫–ª–∏–∫–∞—è –ø–æ –Ω–µ–º—É üôÇ';
    message.classList.remove('hidden');
    setTimeout(()=> message.classList.add('hidden'), 4000);
  });

  // –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç —á—Ç–æ —Ñ–æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  function ensureBackgroundExists(){
    // –ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ–Ω. –ï—Å–ª–∏ 404 ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.
    const img = new Image();
    img.onload = ()=> { /* –≤—Å—ë –æ–∫ */ };
    img.onerror = ()=> {
      console.warn('Background image not found: images/forest-background.jpg. Please upload it to /images/');
      // –ø–æ–¥—Å–∫–∞–∑–∫–∞ —é–∑–µ—Ä—É (–≤ devtools –≤–∏–¥–Ω–æ)
      message.textContent = '–í–Ω–∏–º–∞–Ω–∏–µ: —Ñ–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–≥—Ä—É–∑–∏—Ç–µ images/forest-background.jpg –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π.';
      message.classList.remove('hidden');
      setTimeout(()=> message.classList.add('hidden'), 6000);
    };
    img.src = 'images/forest-background.jpg';
  }
  ensureBackgroundExists();

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–ª–µ–∑–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤ –∫–æ–Ω—Å–æ–ª–∏ (—á—Ç–æ–± –ª–µ–≥–∫–æ –ø–æ–Ω—è—Ç—å –ø—Ä–∏—á–∏–Ω—É)
  console.log('%cGreen Quest: parallax & particles loaded', 'color: lightgreen; background: #002200; padding:3px');

})();
